@use 'sass:math';
@use 'sass:color';
@use 'styles/functions' as fn;
@use 'styles/mixins' as mx;
@use 'styles/config' as cfg;
@use 'styles/colors' as clr;
@use '@/containers/Root/styles.module' as root-styles;

$panel-width-half: fn.half(root-styles.$panel-width);
$logo-size: 36px;
$logo-size-half: fn.half($logo-size);
$icon-size: 21px;
$icon-size-half: fn.half($icon-size);
$icon-settings-size: 30px;
$icon-settings-color: clr.$white-100;
$icon-register-size: 10px;
$icon-register-color: clr.$white-100;
$head-offset-top: fn.offset(0.4);
$fx-duration: 0.3s;

.side-panel {
  @include mx.themify('background-color','panel-bg');

  display: flex;
  position: absolute;
  flex-direction: column;
  width: 100%;
  height: 100%;
  backdrop-filter: saturate(180%) blur(6px);
  box-shadow: 0 0.4rem 1rem rgba(40, 42, 54, 0.35),
      0 0.2rem 0.7rem rgba(68, 71, 90, 0.1);

  &:hover {
    width: auto;
    box-shadow: 0 0.4rem 1rem rgba(98, 114, 164, 0.35),
      0 0.2rem 0.7rem rgba(68, 71, 90, 0.1);

    .title,
    .nav__item-title {
      transform: scaleX(1);
    }

    .title {
      @include mx.set-font(1.2rem, "600");

      opacity: 1;
    }

    .nav__item-title {
      @include mx.set-font(1.3rem, "600");

      margin-left: fn.offset(0.5);
      padding-right: fn.offset(0.4);
    }
  }
}

.head,
.logo {
  display: inline-flex;
  align-items: center;
}

.logo {
  flex: 0 0 auto;
  margin-left: calc(#{$panel-width-half} - #{$logo-size-half});
  width: $logo-size;
  height: $logo-size;
  object-fit: cover;
}

.head {
  position: relative;
  padding: $head-offset-top 0;
  width: 100%;

  &::after {
    @include mx.themify('background-color', 'panel-divider');

    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    width: calc(100% - #{fn.offset() * 2});
    height: 1px;
    transform: translateX(-50%);
  }

  span {
    line-height: 0;
  }
}

.title {
  @include mx.set-font(2.4rem, '600');

  display: inline-flex;
  width: 100%;
  margin-top: $logo-size-half * 0.75;
  margin-left: fn.offset(-0.2);

  &__image {
    width: $logo-size * 0.8;
    height: $logo-size * 0.3;
    object-fit: cover;
  }
}

.version {
  margin-left: auto;
  margin-bottom: fn.offset(-0.1);
  align-self: center;
}

.title,
.nav__item-title {
  transform: scaleX(0);
  opacity: 0;
  transform-origin: left;
  font-size: 0;
}

.nav {
  flex-direction: column;
  align-items: flex-start;
  margin-top: fn.offset(0.6);
  padding: 0 fn.offset(0.5);
  width: 100%;
  height: 100%;

  &, &__item {
    display: flex;
  }

  &__item {
    position: relative;
    align-items: center;
    padding: fn.offset(0.5);
    width: 100%;
    border-radius: cfg.$radius;
    cursor: pointer;

    .nav__item-image,
    .nav__item-title {
      opacity: 0.6;
    }

    &:not(.nav__item_active):hover {
      @include mx.themify('background-color', 'panel-item-hover-bg');

      .nav__item-image,
      .nav__item-title {
        opacity: 0.8;
      }
    }

    &_active {
      @include mx.themify('background-color', 'panel-item-active-hover-bg');

      pointer-events: none;
      cursor: default;

      .nav__item-image,
      .nav__item-title {
        opacity: 1;
      }
    }

    &_bottom {
      margin: auto 0 fn.offset(0.5) 0;

      span {
        @include mx.in-theme('light') {
          filter: invert(1);
        }

        margin-left: fn.offset(0.15);
        line-height: 0;
      }
    }

    &:not(:last-child) {
      margin-bottom: fn.offset(0.5);
    }

    &-register-icon {
      @include mx.themify('background-color', 'primary');

      display: inline-flex;
      position: absolute;
      justify-content: center;
      align-items: center;
      top: $icon-size * 0.2;
      left: $icon-size * 1.2;
      width: $icon-register-size * 1.5;
      height: $icon-register-size * 1.5;
      border-radius: 50%;

      span {
        @include mx.in-theme('light') {
          filter: invert(1);
        }

        line-height: 0;
      }
    }

    &-image {
      @include mx.in-theme('light') {
        filter: invert(1);
      }

      margin-left: fn.offset(0.25);
      width: $icon-size;
      height: $icon-size;
      object-fit: contain;

      &.linode-logo {
        transform: scale(1.3);
      }
    }

    &-title {
      @include mx.in-theme('light') {
        filter: invert(1);
      }

      display: inline-flex;
      color: $icon-settings-color;
    }
  }
}

:export {
  iconSettingsColor: $icon-settings-color;
  iconRegisterColor: $icon-register-color;
  iconRegisterSize: $icon-register-size;
}
